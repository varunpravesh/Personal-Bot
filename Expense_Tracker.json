{
  "name": "Expense_Tracker",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text ?? $json.content ?? $('Transcribe').item.json.text }}",
        "options": {
          "systemMessage": "=### ðŸ§¾ Role: Expense Tracking Assistant + Friendly Chatbot\n\nYou are an Expense Tracking Assistant with a fun and engaging personality. Your primary role is to help users record their daily expenses and generate insightful reports, while also keeping the conversation light, friendly, and enjoyable.\n\n---\n\n### ðŸŽ¯ Core Responsibilities\n\n#### 1. Expense Recording\n\nIf the user shares expenses (e.g., \"Apples 300\" or \"Tea 100, Burger 250\"), do the following:\n\n* Step 1: Understand the message. If it's unclear, ask the user to resend it in a clearer format.\n\n* Step 2: Translate the input into English if it's in Tamil (e.g., from {{ $json.text }}).\n\n* Step 3: Confirm the extracted items, date, category, sub-category, and amount with the user. Example:\n\n  > Got it! You spent 300 on Apples today (Category: Groceries, Sub-category: Fruits). Shall I save this?\n\n* Step 4: If the user agrees, call dataEntryTool, passing the expense details as an array:\n\n  ['Apples 300', 'Mangoes 250']\n\n  In case there's a single input then make it as a single element array:\n  Example input: Fried Rice 200 â†’ ['Fried Rice 200']\n\n  Always ensure that the output is passed as an array.\n\n* Step 5: If the user wants to make changes, help them edit and reconfirm before proceeding.\n\n* Step 6: Once the user has made the changes, call the dataEntryTool to update the database.\n\n---\n\n#### 2. Expense Report Generation\n\nIf the user asks for a report (e.g., \"Show me my weekly expenses\" or \"How much did I spend on food last month?\"):\n\n* Call the dataAnalysisTool by passing the userText as an input.\n\n* Also let the user know that their report/answer is being compiled and will be available soon.\n\n---\n\n#### 3. User Preferences and Personal Info\n\nWhen the user refers to something personal (e.g., \"What is my name?\",or \"Give me a recipe for my favourite food\"):\n\n* Access the document by calling the getPreferences tool. This document consists of all the personal preferences of the user. \n\n* If you don't find any relevant information in the document, ask the user what it is and record the new information using the updatePreferences tool.\n\n* Automatically detect and update any personal info or pereference that the user may provide.\n\n#### 4. Managing Calendar\n\n* Any requests regarding the calendar events will be handled by the calendarAgent tool.\n\n* The arguments for this tool will be today's date and the user's request.\n\n---\n\n### ðŸ§  Additional Guidelines\n\n* If the user message is unclear, politely ask them to rephrase it.\n* Always be friendly, helpful, and natural. Use humor, emojis, or personal touches to keep the experience warm and delightful.\n* Today's date is: {{ $today }}\n* Your memory allows you to recall previous messagesâ€”use it wisely when confirming or referencing past entries.\n* No need to highlight or bold anything. You can use emojis to make the responses more engaging.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1984,
        240
      ],
      "id": "d9176251-65d5-49cc-8f8c-7eadeb48ff29",
      "name": "AI Agent",
      "retryOnFail": true,
      "maxTries": 2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Cw27gbrx6qeCQGds",
          "mode": "list",
          "cachedResultName": "Data_Entry"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Date": "={{ $today }}",
            "UserText": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('UserText', ``, 'string') }}",
            "ChatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "UserText",
              "displayName": "UserText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            },
            {
              "id": "ChatID",
              "displayName": "ChatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1728,
        544
      ],
      "id": "06818dde-f187-4de7-9503-371604338931",
      "name": "dataEntryTool"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "8Ctd3YCnO26jsbKw",
          "mode": "list",
          "cachedResultName": "Data_Analysis"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "ChatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "userRequest": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('userRequest', ``, 'string') }}"
          },
          "matchingColumns": [
            "userText"
          ],
          "schema": [
            {
              "id": "ChatID",
              "displayName": "ChatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "userRequest",
              "displayName": "userRequest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1888,
        544
      ],
      "id": "c8bee3ef-1ddc-45f7-99d5-1d907bf84ae3",
      "name": "dataAnalysisTool"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "105bb9b5-c1e8-4acc-a631-dc81146b503c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7bfad959-d662-4f3a-a623-1f6dc540345e",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fbc1fc71-2322-4ac6-a5cf-a4ed7ab5a6b2",
                    "leftValue": "={{ $json.message.document.thumbnail.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4fd97f18-6a5d-406a-a461-2e5b2ec67fdd",
                    "leftValue": "={{ $json.message.sticker.set_name }}",
                    "rightValue": "Sticker",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sticker"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        240,
        240
      ],
      "id": "1e3dbcd0-d0e6-49c9-b293-9f5fbd1fa6e3",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1040,
        64
      ],
      "id": "f550c4c0-ab63-4d73-9f7e-55f52cff57ad",
      "name": "Transcribe",
      "credentials": {
        "openAiApi": {
          "id": "5mAhOpevxVoT2id5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1568,
        544
      ],
      "id": "7c269d86-4977-4ad6-8026-de2b658a163f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": "o3-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAzureOpenAi",
      "typeVersion": 1,
      "position": [
        2208,
        1024
      ],
      "id": "b0030011-c79e-4e75-a049-79b0292aa902",
      "name": "Azure OpenAI Chat Model",
      "credentials": {
        "azureOpenAiApi": {
          "id": "6H4SB1cfFW6KOCHR",
          "name": "Azure Open AI account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2912,
        112
      ],
      "id": "a7c47a3b-2906-41f1-b302-610787f63fd4",
      "name": "sendMessage",
      "webhookId": "507d367a-9817-4825-afcc-bc02d505a03e",
      "credentials": {
        "telegramApi": {
          "id": "2F9RO4Kjs0q4EF9u",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.error }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2912,
        368
      ],
      "id": "b5d23ca9-1c95-4d34-8c4a-65d165cbb4c4",
      "name": "sendError",
      "webhookId": "507d367a-9817-4825-afcc-bc02d505a03e",
      "credentials": {
        "telegramApi": {
          "id": "2F9RO4Kjs0q4EF9u",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        848,
        64
      ],
      "id": "c7a06d36-75fd-414c-828d-af276536f11f",
      "name": "audioDownload",
      "webhookId": "18351a8c-03b8-434e-bb44-431ae5f1703c",
      "credentials": {
        "telegramApi": {
          "id": "2F9RO4Kjs0q4EF9u",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.thumbnail.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        704,
        368
      ],
      "id": "26714a50-0510-4aa1-81ff-bd696abb9eb9",
      "name": "imageDownload",
      "webhookId": "18351a8c-03b8-434e-bb44-431ae5f1703c",
      "credentials": {
        "telegramApi": {
          "id": "2F9RO4Kjs0q4EF9u",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Extract the products and prices.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1104,
        368
      ],
      "id": "b5cc7785-98ca-4e99-b88f-8939cd8c884b",
      "name": "analyzeImage",
      "credentials": {
        "openAiApi": {
          "id": "5mAhOpevxVoT2id5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "resize",
        "options": {}
      },
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        912,
        368
      ],
      "id": "6bfd7731-12f0-4c0e-b7a5-81df1d063c7b",
      "name": "convertImage"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1008,
        608
      ],
      "id": "9d0d10ca-e212-42c1-919e-a3773486ff45",
      "name": "Limit"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1-OMhvvcw2W0kvI1IzxZkQgfKuPhz1HEMNd291ownQsU",
          "mode": "list",
          "cachedResultName": "ExpenseTracking",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-OMhvvcw2W0kvI1IzxZkQgfKuPhz1HEMNd291ownQsU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 510621147,
          "mode": "list",
          "cachedResultName": "Stickers",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-OMhvvcw2W0kvI1IzxZkQgfKuPhz1HEMNd291ownQsU/edit#gid=510621147"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        704,
        608
      ],
      "id": "f3ac5b45-e338-4d8b-af14-02d941baf605",
      "name": "fetchStickerList",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "OXvemS2ZQo2R3CDm",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "type": "random"
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        864,
        608
      ],
      "id": "20bbfb3f-2367-4db4-84c5-7fc1ca3e06d5",
      "name": "Randomize"
    },
    {
      "parameters": {
        "operation": "sendSticker",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "file": "={{ $json.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1152,
        608
      ],
      "id": "b07ef8b6-3361-4ffb-b27d-fd5a29073cdb",
      "name": "sendSticker",
      "webhookId": "9a5a25ba-b9f6-48b1-b401-f26a243bac21",
      "credentials": {
        "telegramApi": {
          "id": "2F9RO4Kjs0q4EF9u",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Expense Tracker",
        "height": 100,
        "width": 300,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "917e763c-672e-4695-a233-464a16659329",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2144,
        544
      ],
      "id": "a5c9c01f-9c34-4fa0-a2f4-bbe208b49933",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "ZAcpVlBCY5GnSrxy",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "199egB2nKh2TjXuc4vm3Ty7Ytz_A-xhJjdx1vvXooD54"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        2288,
        544
      ],
      "id": "ca9db729-3641-4452-bf2a-7db08d79b415",
      "name": "getPreferences",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "fsjJuaa6TF218oDT",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "199egB2nKh2TjXuc4vm3Ty7Ytz_A-xhJjdx1vvXooD54",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "locationChoice": "location",
              "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('actionFields0_Text', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        2464,
        544
      ],
      "id": "d4bb8dc0-c3fb-41e2-85d0-9c5fbd2478b0",
      "name": "updatePreferences",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "fsjJuaa6TF218oDT",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        2032,
        544
      ],
      "id": "094b79c6-4a2e-4e76-acec-b75e8fabba89",
      "name": "Wikipedia"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        2624,
        544
      ],
      "id": "8f8673fc-d8ee-441e-b5ba-5fed665c75a8",
      "name": "Calculator"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "pJO20wgsoBr55MzP",
          "mode": "list",
          "cachedResultName": "calendarAgent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userText": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('userText', ``, 'string') }}",
            "date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('date', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "userText",
              "displayName": "userText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2768,
        544
      ],
      "id": "dacbc350-dbb9-4028-9a93-7d4b48c437ad",
      "name": "calendarAgent"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -16,
        272
      ],
      "id": "144db326-1a92-4c9d-ba43-2c6120d4bd5d",
      "name": "Telegram Trigger",
      "webhookId": "d7169ae8-b646-4ed3-aaf6-e42c70e86ddf",
      "credentials": {
        "telegramApi": {
          "id": "2F9RO4Kjs0q4EF9u",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1408,
        544
      ],
      "id": "b7c688ff-b389-4e30-b396-5711ae832b5f",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "NttQhhm7UNB0B1N8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "dataEntryTool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "dataAnalysisTool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "sendMessage",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "sendError",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "audioDownload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "imageDownload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetchStickerList",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Azure OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "audioDownload": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "imageDownload": {
      "main": [
        [
          {
            "node": "convertImage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "analyzeImage": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertImage": {
      "main": [
        [
          {
            "node": "analyzeImage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "sendSticker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetchStickerList": {
      "main": [
        [
          {
            "node": "Randomize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Randomize": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getPreferences": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "updatePreferences": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calendarAgent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c90b7bb2-e5c0-4e5d-aee3-59a5cdb867ab",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8d608620218d5109f687c7085c29c921f05c1270d752e35950dfb55c26e36ff4"
  },
  "id": "qJItANDLVdeps1Tu",
  "tags": []
}